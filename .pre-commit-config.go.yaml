# Pre-commit hooks configuration for Go projects
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

# To install: pre-commit install
# To run manually: pre-commit run --all-files
# To update hooks: pre-commit autoupdate

repos:
  # Go formatting and imports
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
        name: Format Go code (gofmt)
        description: Run gofmt to format Go code

      - id: go-imports
        name: Fix Go imports (goimports)
        description: Run goimports to organize imports

      - id: go-vet
        name: Go vet (type check)
        description: Run go vet for static analysis

      - id: go-mod-tidy
        name: Tidy go.mod and go.sum
        description: Run go mod tidy to clean up dependencies

      - id: go-unit-tests
        name: Run Go unit tests
        description: Run go test for unit tests
        args: ['-short', '-race']

  # golangci-lint (comprehensive linting)
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.55.2
    hooks:
      - id: golangci-lint
        name: golangci-lint (comprehensive linting)
        description: Run golangci-lint with fast mode for pre-commit
        args: ['--fast']

  # Security scanning
  - repo: https://github.com/securego/gosec
    rev: v2.18.2
    hooks:
      - id: gosec
        name: gosec (security scanner)
        description: Security scanner for Go code
        args: ['-fmt=text', '-exclude-dir=tests', './...']

  # YAML validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
        name: Check YAML syntax
        description: Validate YAML files

      - id: check-added-large-files
        name: Check for large files
        description: Prevent large files from being committed
        args: ['--maxkb=1000']

      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Detect merge conflict markers

      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensure files end with newline

      - id: trailing-whitespace
        name: Trim trailing whitespace
        description: Remove trailing whitespace

      - id: detect-private-key

  # Containerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        name: Lint Containerfile with hadolint
        files: ^Containerfile$

# Run pre-commit on all files initially
default_install_hook_types: [pre-commit, pre-push]

# Configuration
default_language_version:
  golang: '1.21'

# Files to exclude from all hooks
exclude: |
  (?x)^(
      \.git/|
      \.github/|
      vendor/|
      node_modules/|
      artifacts/|
      docs/refinements/|
      .*_test\.go$|
      mock_.*\.go$|
      wire_gen\.go$
  )

# Global settings
fail_fast: false
minimum_pre_commit_version: '3.0.0'
