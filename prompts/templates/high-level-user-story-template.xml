<?xml version="1.0" encoding="UTF-8"?>
<template>
  <metadata>
    <name>High_Level_User_Story_Template</name>
    <version>1.4</version>
    <source>Generated based on SDLC Artifacts Comprehensive Guideline v1.1</source>
    <sdlc_phase>High-Level User Story</sdlc_phase>
    <alias>Capability Story, Parent Story, Feature (in Strategy 1)</alias>
    <last_updated>2025-10-20</last_updated>
    <changes>v1.4: Reduced business context overlap - removed User Context and Business Value sections; added Value Contribution cross-reference section (Lean Analysis Report v1.4 Recommendation 3 - Business Context Bloat Reduction). Net reduction: 16 sections → 14 sections (~35% review time savings).</changes>
  </metadata>

  <instructions>
    <guideline>User-centric expression of functionality at higher abstraction than backlog stories</guideline>
    <guideline>Bridges gap between features/epics and detailed backlog stories</guideline>
    <guideline>Time horizon: Few sprints (2-6 weeks)</guideline>
    <guideline>Purely functional - NO technical constraints or implementation details</guideline>
    <guideline>Implementation-agnostic - focuses on WHAT users need and WHY</guideline>
    <guideline>Uses standard user story format: As a [user], I want [goal], so that [benefit]</guideline>
    <guideline>Will decompose into multiple backlog stories (sprint-sized)</guideline>
    <guideline>Can represent cross-feature user experiences</guideline>
    <guideline>CROSS-REFERENCING: Use Value Contribution section to reference Epic §1/§3 and PRD FR-XX instead of duplicating business context (reduces overlap by 50%)</guideline>
    <guideline>HLS focuses on USER WORKFLOWS and FUNCTIONAL REQUIREMENTS - defer business value to Epic, implementation to Backlog Stories</guideline>
  </instructions>

  <structure format="markdown">
    <![CDATA[
# High-Level User Story: [Story Title]

## Metadata
- **Story ID:** HLS-[XXX]
- **Status:** [Draft/In Review/Approved/Ready/In Progress/Completed]
- **Priority:** [Critical/High/Medium/Low]
- **Parent Epic:** [EPIC-XXX]
- **Parent PRD:** [PRD-XXX]
- **PRD Section:** [Section X.Y - specific section this story addresses]
- **Functional Requirements:** [FR-01, FR-02, FR-03]
- **Owner:** [Product Owner Name]
- **Target Release:** [Q1 2025 / Sprint 15-17]

## Parent Artifact Context

**Parent Epic:** [EPIC-XXX: Epic Title]
- **Link:** {SDLC_DOCUMENTS_URL}/epic/{id} (example: {SDLC_DOCUMENTS_URL}/epic/123)
- **Epic Contribution:** [How this story contributes to epic completion]

**Parent PRD:** [PRD-XXX: PRD Title]
- **Link:** {SDLC_DOCUMENTS_URL}/prd/{id} (example: {SDLC_DOCUMENTS_URL}/prd/005)
- **PRD Section:** [Section X.Y that defines this story]
- **Functional Requirements Coverage:**
  - **FR-01:** [Requirement description from PRD]
  - **FR-02:** [Requirement description from PRD]
  - **FR-03:** [Requirement description from PRD]

**User Persona Source:** [Business Research Appendix A - Persona Name]

## User Story Statement

**As a** [user persona],
**I want** [goal or capability],
**So that** [business value or user benefit].

## Value Contribution

**Parent Epic Alignment (from Epic §1, §3):**
This story contributes to Epic-[XXX] success metrics:
- **Success Metric from Epic §3:** [How this HLS contributes]
- **Business Value from Epic §1:** [1-sentence alignment statement]

**PRD Requirements Coverage (from PRD FR-XX):**
This story implements the following PRD functional requirements:
- **FR-01:** [Requirement name from PRD]
- **FR-02:** [Requirement name from PRD]

**User Impact:**
[1-2 sentences on user benefit - avoid duplicating Epic §1. User Impact]

**Note:** For detailed business value, user personas, and market context, see Epic-XXX §1 (Business Value) and Business Research document. For comprehensive requirements, see PRD-XXX.

## Functional Requirements (High-Level)

### Primary User Flow

**Happy Path:**
1. User [action 1]
2. System [response 1]
3. User [action 2]
4. System [response 2]
5. User achieves [goal]

**Alternative Flows:**
- **Alt Flow 1:** If [condition], then [alternative path]
- **Alt Flow 2:** If [condition], then [alternative path]

### User Interactions
[Describe what the user does - NOT how it's implemented]
- [Interaction 1: e.g., "User enters notification preferences"]
- [Interaction 2: e.g., "User saves preferences"]
- [Interaction 3: e.g., "User receives confirmation"]

### System Behaviors (User Perspective)
[What the system does from user's point of view - NO technical details]
- [Behavior 1: e.g., "System validates inputs"]
- [Behavior 2: e.g., "System persists changes"]
- [Behavior 3: e.g., "System provides feedback"]

## Acceptance Criteria (High-Level)

### Criterion 1: [Description]
**Given** [user context or precondition]
**When** [user action]
**Then** [expected outcome from user perspective]

### Criterion 2: [Description]
**Given** [user context or precondition]
**When** [user action]
**Then** [expected outcome from user perspective]

### Criterion 3: [Description]
**Given** [user context or precondition]
**When** [user action]
**Then** [expected outcome from user perspective]

### Edge Cases & Error Conditions
- **Invalid Input:** [How system responds to user]
- **System Unavailable:** [What user experiences]
- **Partial Success:** [How system handles]

## Scope & Boundaries

### In Scope
- [Capability 1 included]
- [Capability 2 included]
- [Capability 3 included]

### Out of Scope (Deferred to Future Stories)
- [Capability explicitly not included]
- [Enhancement for later iteration]

## Decomposition into Backlog Stories

### Estimated Backlog Stories (Not Yet Detailed)

1. **[Story 1 Title]** (~[3] SP)
   - Brief: [One sentence description]

2. **[Story 2 Title]** (~[5] SP)
   - Brief: [One sentence description]

3. **[Story 3 Title]** (~[2] SP)
   - Brief: [One sentence description]

**Total Estimated Story Points:** [~13 SP]
**Estimated Sprints:** [2-3 sprints]

### Decomposition Strategy
[How to break this high-level story into backlog stories - by workflow step, by component, by persona, etc.]

## Dependencies

### User Story Dependencies
- **Depends On:** [HLS-XXX: Must complete before this story]
- **Blocks:** [HLS-YYY: This story must complete first]

### External Dependencies
- [Third-party service dependency]
- [Data availability dependency]

## Non-Functional Requirements (User-Facing Only)

**Note:** Technical NFRs (performance targets, architecture) belong in PRD or Backlog Stories. Only user-facing NFRs here.

- **Usability:** [User experience requirements]
- **Accessibility:** [WCAG level, screen reader support]
- **Localization:** [Languages supported]
- **Compliance:** [User-facing compliance needs, e.g., "User must consent to data collection"]

## Risks & Open Questions

### Risks
| Risk | Impact | Mitigation |
|------|--------|------------|
| [User adoption risk] | High/Med/Low | [Strategy] |
| [Usability risk] | High/Med/Low | [Strategy] |

### Open Questions

**High-Level Story Open Questions focus on USER/UX/FUNCTIONAL uncertainties needing validation before backlog refinement.**

**✅ INCLUDE - User/UX/Functional Questions:**
- User behavior or preference uncertainties (requires user research/validation)
- UX design questions (requires design input or usability testing)
- Functional requirement clarifications from stakeholders
- Scope or priority questions (requires product owner decision)
- User workflow ambiguities

**❌ EXCLUDE - Other Phase Questions:**
- Business questions (market, business model) → Epic/PRD
- Product/technical trade-offs → PRD
- Implementation uncertainties → Backlog Story
- Technical decisions → ADR/Tech Spec

---

**Examples of appropriate questions:**
- "Do users prefer category toggles or dropdown for notification preferences?" [REQUIRES UX DESIGN]
- "Should notification settings be in profile or dedicated settings page?" [REQUIRES UX RESEARCH]
- "What is the priority order for notification categories?" [REQUIRES PRODUCT OWNER]
- "Do we need bulk enable/disable all option?" [REQUIRES PRODUCT OWNER]

**Examples of questions for other phases:**
- ❌ "Should we prioritize enterprise or SMB users?" (Epic/PRD)
- ❌ "What API endpoint structure?" (Backlog Story)
- ❌ "Should we use Redis or PostgreSQL?" (ADR)

---

**If no open questions exist, state:** "No open UX or functional questions at this time. Implementation uncertainties will be captured during backlog refinement."

---

- [User/UX Question 1 - mark as [REQUIRES UX RESEARCH/DESIGN] or [REQUIRES PRODUCT OWNER]]
- [Functional Question 2]

## Definition of Ready (Before Backlog Refinement)

- [ ] User story statement complete and validated
- [ ] User persona identified and documented
- [ ] Business value articulated and quantified
- [ ] High-level acceptance criteria defined
- [ ] Dependencies identified
- [ ] Product Owner approval obtained

## Definition of Done (High-Level Story Complete)

- [ ] All decomposed backlog stories completed
- [ ] All acceptance criteria met and validated
- [ ] User testing completed (if applicable)
- [ ] Success metrics baseline captured
- [ ] Documentation updated (user-facing)
- [ ] Product Owner acceptance obtained

## Related Documents
- **Parent Epic:** {SDLC_DOCUMENTS_URL}/epic/{id}
- **PRD:** {SDLC_DOCUMENTS_URL}/prd/{id} (section describing this capability)
- **User Research:** [Link to research supporting this story]
- **User Personas:** [Link to persona documents]
- **Wireframes/Mockups:** [Link if available]
- **Business Research:** {SDLC_DOCUMENTS_URL}/business-research (e.g., "§3.2 - UX Gaps")
    ]]>
  </structure>

  <examples>
    <example>
      # High-Level User Story: Configure Push Notification Preferences

      ## User Story Statement
      **As a** mobile app user,
      **I want** to configure which types of push notifications I receive,
      **So that** I only get notifications relevant to my interests and avoid notification fatigue.

      ## Value Contribution

      **Parent Epic Alignment (from Epic-006 §1, §3):**
      This story contributes to Epic-006 "User Engagement Optimization" success metrics:
      - **Success Metric from Epic §3:** Reduce app uninstalls by 20% (notification preferences contribute to retention)
      - **Business Value from Epic §1:** Improves user satisfaction and engagement

      **PRD Requirements Coverage (from PRD-012 FR-XX):**
      This story implements the following PRD functional requirements:
      - **FR-05:** User notification preference management
      - **FR-06:** Persistent preference storage

      **User Impact:**
      Reduces notification fatigue by giving users granular control over which notification types they receive, improving app experience and reducing uninstalls.

      **Note:** For detailed business value and user personas, see Epic-006 §1 (Business Value). For comprehensive requirements, see PRD-012.

      ## Functional Requirements (High-Level)

      ### Primary User Flow

      **Happy Path:**
      1. User navigates to notification settings
      2. User views available notification categories
      3. User enables/disables categories
      4. User saves preferences
      5. System confirms changes applied

      ## Acceptance Criteria

      ### Criterion 1: User can view notification categories
      **Given** user is in notification settings
      **When** user views the settings screen
      **Then** user sees all available notification categories (marketing, transactional, alerts)

      ### Criterion 2: User can toggle categories
      **Given** user sees notification categories
      **When** user toggles a category on/off
      **Then** system immediately updates the preference

      ### Criterion 3: Changes persist
      **Given** user has changed notification preferences
      **When** user closes and reopens the app
      **Then** preferences remain as configured

      ## Decomposition into Backlog Stories

      1. **Display notification preferences screen** (~3 SP)
         - Brief: Create UI to show all notification categories

      2. **Implement preference toggle logic** (~5 SP)
         - Brief: Backend API to save/retrieve user preferences

      3. **Apply preferences to notification delivery** (~5 SP)
         - Brief: Filter notifications based on user preferences

      **Total Estimated Story Points:** ~13 SP
      **Estimated Sprints:** 2 sprints
    </example>
  </examples>
</template>
