<?xml version="1.0" encoding="UTF-8"?>
<template>
  <metadata>
    <name>Product_Requirements_Document_Template</name>
    <version>1.7</version>
    <source>Section 6.1 of advanced_prompt_engineering_software_docs_code_final.md (lines 630-728), enhanced for Context Engineering Framework</source>
    <sdlc_phase>PRD</sdlc_phase>
    <last_updated>2025-10-20</last_updated>
    <changes>v1.7: Simplified CLAUDE.md hierarchy section (120 lines → 60 lines) - moved enforcement to generator, kept concise examples (Lean Analysis Report Recommendation 2 - generator-first approach)</changes>
  </metadata>

  <instructions>
    <guideline>Fill all sections marked with [placeholder]</guideline>
    <guideline>Ensure completeness, clarity, and stakeholder alignment</guideline>
    <guideline>Success metrics must be SMART (Specific, Measurable, Achievable, Relevant, Time-bound)</guideline>
    <guideline>Problem statement must include quantified pain points with data</guideline>
    <guideline>All acceptance criteria must be testable</guideline>
    <guideline>Each high-level user story should reference specific functional requirements (FR-XX)</guideline>
  </instructions>

  <structure format="markdown">
    <![CDATA[
# PRD: [Product/Feature Name]

## Metadata
- **PRD ID:** PRD-[XXX]
- **Author:** [name]
- **Date:** [date]
- **Version:** [version]
- **Status:** [Draft/In Review/Approved]
- **Parent Epic:** EPIC-[XXX]
- **Informed By Business Research:** [{SDLC_DOCUMENTS_URL}/business-research - optional for market context]
- **Informed By Implementation Research:** [{SDLC_DOCUMENTS_URL}/implementation-research - optional for technical feasibility]

## Parent Artifact Context

**Parent Epic:** [EPIC-XXX: Epic Title]
- **Link:** {SDLC_DOCUMENTS_URL}/epic/{id} (example: {SDLC_DOCUMENTS_URL}/epic/003)
- **Epic Scope Coverage:** [Which portion of the epic this PRD addresses]
- **Epic Acceptance Criteria Mapping:** [Which epic-level criteria this PRD satisfies]

## Research References

### Business Research (Optional - When Market Context Needed)
**Document:** {SDLC_DOCUMENTS_URL}/business-research

**Applied Insights:**
- **§[X.Y]: [Section Title]:** [Insight relevant to PRD requirements]
- **§[X.Y]: [Section Title]:** [Market data supporting business case]

*Use when PRD requires market validation, competitive positioning, or business model context.*

### Implementation Research (Optional - When Technical Feasibility Needed)
**Document:** {SDLC_DOCUMENTS_URL}/implementation-research

**Applied Insights:**
- **§[X.Y]: [Section Title]:** [Technical feasibility insight]
- **§[X.Y]: [Section Title]:** [Architecture pattern or constraint]

*Use when PRD includes NFRs, technical constraints, or architecture considerations requiring research validation.*

**Note:** PRD is a bridge artifact. Business Research is typically consumed at Epic level, and Implementation Research at Backlog Story level. Only reference research here when needed to inform requirements definition.

## Executive Summary
[2-3 paragraph overview: problem, solution, impact]

## Background & Context
- **Business Context:** [why now]
- **User Research:** [key findings]
- **Market Analysis:** [competitive landscape]

## Problem Statement
**Current State:** [pain points with data]
**Desired State:** [vision]
**Impact if not solved:** [quantified consequences]

## Goals & Success Metrics
| Goal | Metric | Target | Measurement Method |
|------|---------|--------|-------------------|
| [Goal 1] | [Metric] | [Target] | [How measured] |

## User Personas & Use Cases
### Persona 1: [Name]
- **Description:** [demographics, behaviors]
- **Needs:** [primary needs]
- **Use Case:** [specific scenario]

## Requirements

### Functional Requirements
| ID | Requirement | Priority | Acceptance Criteria |
|----|-------------|----------|-------------------|
| FR-01 | [Requirement] | Must-have | [Criteria] |

### Non-Functional Requirements
- **Performance:** [specific targets]
- **Security:** [requirements]
- **Scalability:** [targets]
- **Accessibility:** [WCAG standards]

## User Experience
### User Flows
[Mermaid diagrams or step-by-step flows]

### Wireframes/Mockups
[Link to designs]

## Technical Considerations

**DECISION HIERARCHY:** CLAUDE.md (Authoritative) > Implementation Research (Advisory) > PRD-specific (Supplementary)

**Note:** PRD generator enforces this hierarchy. CLAUDE.md decisions referenced by file+line, alternatives NOT suggested for decided topics.

### Alignment with CLAUDE.md Standards

**Established Decisions Applied:**
- **CLAUDE-core.md:** [Core development philosophy]
- **CLAUDE-architecture.md:** [Project structure, modularity patterns]
- **CLAUDE-tooling.md:** [Build tools, linters, formatters - e.g., "UV for Python, Ruff for linting"]
- **CLAUDE-testing.md:** [Testing framework - e.g., "pytest with fixtures, 80% coverage"]
- **CLAUDE-http-frameworks.md (Go):** [HTTP framework - e.g., "Gin per line 238"]
- [Additional CLAUDE-*.md files as applicable]

**Example (Compliant):**
```
Use Gin HTTP framework per CLAUDE-http-frameworks.md:238 (Gin = default for Go REST APIs)
```

**Example (Non-Compliant - DON'T DO THIS):**
```
❌ "Use chi, gin, or gorilla/mux" (suggests alternatives when Gin already decided)
```

### Implementation Research (Gaps Only)

**Applied Insights (ONLY for topics not in CLAUDE.md):**
- **§[X.Y]: [Pattern Name]:** [Technical guidance]
  - **CLAUDE.md Status:** `[CLAUDE.md GAP]` or `[ALIGNS WITH CLAUDE-{file}.md]`

**Example:**
```
§5.3 Cache invalidation strategy - [CLAUDE-caching.md GAP]
Recommendation: Time-based TTL with 5-minute expiration
```

### CLAUDE.md Override (When Justified)

**If override needed, document:**
```
[CLAUDE.md OVERRIDE] {Alternative approach}
- Original: CLAUDE-{file}.md:{line} "{decision}"
- Rationale: {Technical justification}
- Approval: [APPROVED BY: {name} - {date}]
```

### Architecture
[High-level architecture approach - product-specific only, supplement CLAUDE.md]

### Dependencies
**System:** [Systems, services, databases]
**External:** [Third-party integrations]

### Technical Constraints
[Limitations, platform requirements]

### Data Model
[Key entities, relationships]

## Risks & Mitigations
| Risk | Impact | Probability | Mitigation |
|------|--------|-------------|------------|
| [Risk 1] | High | Medium | [Strategy] |

## Timeline & Milestones
- Phase 1: [dates] - [deliverables]
- Phase 2: [dates] - [deliverables]

## Open Questions

**PRD is a BRIDGE ARTIFACT: Include both business and strategic technical questions, but defer implementation details to later phases.**

**✅ INCLUDE in PRD Open Questions:**

1. **Business Questions (from Epic or new):**
   - Market priorities and user segment questions
   - Business model and pricing questions
   - Regulatory/compliance uncertainties
   - Strategic timing and resource allocation

2. **Product/Technical Trade-offs (PM + Tech Lead discussion):**
   - Questions balancing user experience with technical constraints
   - Build vs. buy decisions affecting timeline and features
   - Architecture approach questions affecting product decisions
   - Technical feasibility questions impacting requirements or scope

**❌ DEFER to ADR/Tech Spec phases:**
- Specific implementation details (algorithms, data structures, patterns)
- Granular technology choices (library selection, specific tools)
- Low-level architecture decisions not affecting product requirements
- Questions answerable during implementation without stakeholder input

---

**Examples of PRD-APPROPRIATE questions:**

[BUSINESS] "Should we prioritize enterprise customers or SMB users in the initial release?"

[TECHNICAL] "Should we prioritize offline-first capability or real-time sync in V1?" (affects user experience and architecture)

[TECHNICAL] "What authentication approach balances user experience with security requirements?" (affects NFRs and user flows)

[TECHNICAL] "Should we build notification infrastructure or integrate with third-party service?" (build vs. buy decision)

---

**Examples of questions to DEFER (for ADR/Tech Spec):**

- "Should we use Redis or Memcached for caching?" (specific technology choice - ADR)
- "What specific encryption algorithm for data at rest?" (implementation detail - Tech Spec)
- "Should we use repository or active record pattern?" (low-level design - Tech Spec)

---

**If no open questions exist, state:** "No open questions at this time. Technical implementation details will be addressed in ADR and Technical Specification phases."

---

- [Question 1 - mark as [BUSINESS] or [TECHNICAL]]
- [Question 2 - mark as [BUSINESS] or [TECHNICAL]]

## Related Documents
- **Parent Epic:** {SDLC_DOCUMENTS_URL}/epic/{id}
- **Business Research:** {SDLC_DOCUMENTS_URL}/business-research (if referenced)
- **Implementation Research:** {SDLC_DOCUMENTS_URL}/implementation-research (if referenced)

## Appendix
[Additional context, research data]
    ]]>
  </structure>

  <process>
    <step>CLARIFY requirements through questions</step>
    <step>STRUCTURE document with standard sections</step>
    <step>VALIDATE completeness against checklist</step>
    <step>ITERATE based on stakeholder feedback</step>
  </process>

  <examples>
    <example source="Section 6.1">
      See research document for comprehensive PRD example with slot-filling process
    </example>
  </examples>
</template>
